<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.springboot.oauth.server.mapper.SysUserMapper">
  <resultMap id="BaseResultMap" type="com.springboot.oauth.server.domain.table.SysUser">
    <id column="user_id" jdbcType="BIGINT" property="userId" />
    <result column="user_code" jdbcType="VARCHAR" property="userCode" />
    <result column="username" jdbcType="VARCHAR" property="username" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="age" jdbcType="INTEGER" property="age" />
    <result column="gender" jdbcType="CHAR" property="gender" />
    <result column="nick_name" jdbcType="VARCHAR" property="nickName" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="phone_no" jdbcType="VARCHAR" property="phoneNo" />
    <result column="avatar" jdbcType="VARCHAR" property="avatar" />
    <result column="status" jdbcType="VARCHAR" property="status" />
    <result column="token" jdbcType="VARCHAR" property="token" />
    <result column="del_flag" jdbcType="VARCHAR" property="delFlag" />
    <result column="creator" jdbcType="VARCHAR" property="creator" />
    <result column="create_at" jdbcType="TIMESTAMP" property="createAt" />
    <result column="updater" jdbcType="VARCHAR" property="updater" />
    <result column="update_at" jdbcType="TIMESTAMP" property="updateAt" />
  </resultMap>
  <sql id="Base_Column_List">
    user_id, user_code, username, password, age, gender, nick_name, email, phone_no, 
    avatar, status, token, del_flag, creator, create_at, updater, update_at
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from sys_user
    where user_id = #{userId,jdbcType=BIGINT}
  </select>

  <select id="selectUserList" resultType="com.springboot.oauth.server.domain.table.SysUser">
    select
    <include refid="Base_Column_List" />
    from sys_user
  </select>
  <select id="selectByUsername" resultType="com.springboot.oauth.server.domain.table.SysUser">
    select
    <include refid="Base_Column_List" />
    from sys_user
    where username = #{username,jdbcType=VARCHAR}
  </select>

  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from sys_user
    where user_id = #{userId,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.springboot.oauth.server.domain.table.SysUser">
    insert into sys_user (user_id, user_code, username, 
      password, age, gender, 
      nick_name, email, phone_no, 
      avatar, status, token, 
      del_flag, creator, create_at, 
      updater, update_at)
    values (#{userId,jdbcType=BIGINT}, #{userCode,jdbcType=VARCHAR}, #{username,jdbcType=VARCHAR}, 
      #{password,jdbcType=VARCHAR}, #{age,jdbcType=INTEGER}, #{gender,jdbcType=CHAR}, 
      #{nickName,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, #{phoneNo,jdbcType=VARCHAR}, 
      #{avatar,jdbcType=VARCHAR}, #{status,jdbcType=INTEGER}, #{token,jdbcType=VARCHAR}, 
      #{delFlag,jdbcType=INTEGER}, #{creator,jdbcType=VARCHAR}, #{createAt,jdbcType=TIMESTAMP}, 
      #{updater,jdbcType=VARCHAR}, #{updateAt,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.springboot.oauth.server.domain.table.SysUser">
    insert into sys_user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        user_id,
      </if>
      <if test="userCode != null">
        user_code,
      </if>
      <if test="username != null">
        username,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="age != null">
        age,
      </if>
      <if test="gender != null">
        gender,
      </if>
      <if test="nickName != null">
        nick_name,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="phoneNo != null">
        phone_no,
      </if>
      <if test="avatar != null">
        avatar,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="token != null">
        token,
      </if>
      <if test="delFlag != null">
        del_flag,
      </if>
      <if test="creator != null">
        creator,
      </if>
      <if test="createAt != null">
        create_at,
      </if>
      <if test="updater != null">
        updater,
      </if>
      <if test="updateAt != null">
        update_at,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="userCode != null">
        #{userCode,jdbcType=VARCHAR},
      </if>
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="age != null">
        #{age,jdbcType=INTEGER},
      </if>
      <if test="gender != null">
        #{gender,jdbcType=CHAR},
      </if>
      <if test="nickName != null">
        #{nickName,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="phoneNo != null">
        #{phoneNo,jdbcType=VARCHAR},
      </if>
      <if test="avatar != null">
        #{avatar,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="token != null">
        #{token,jdbcType=VARCHAR},
      </if>
      <if test="delFlag != null">
        #{delFlag,jdbcType=INTEGER},
      </if>
      <if test="creator != null">
        #{creator,jdbcType=VARCHAR},
      </if>
      <if test="createAt != null">
        #{createAt,jdbcType=TIMESTAMP},
      </if>
      <if test="updater != null">
        #{updater,jdbcType=VARCHAR},
      </if>
      <if test="updateAt != null">
        #{updateAt,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.springboot.oauth.server.domain.table.SysUser">
    update sys_user
    <set>
      <if test="userCode != null">
        user_code = #{userCode,jdbcType=VARCHAR},
      </if>
      <if test="username != null">
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="age != null">
        age = #{age,jdbcType=INTEGER},
      </if>
      <if test="gender != null">
        gender = #{gender,jdbcType=CHAR},
      </if>
      <if test="nickName != null">
        nick_name = #{nickName,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="phoneNo != null">
        phone_no = #{phoneNo,jdbcType=VARCHAR},
      </if>
      <if test="avatar != null">
        avatar = #{avatar,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="token != null">
        token = #{token,jdbcType=VARCHAR},
      </if>
      <if test="delFlag != null">
        del_flag = #{delFlag,jdbcType=INTEGER},
      </if>
      <if test="creator != null">
        creator = #{creator,jdbcType=VARCHAR},
      </if>
      <if test="createAt != null">
        create_at = #{createAt,jdbcType=TIMESTAMP},
      </if>
      <if test="updater != null">
        updater = #{updater,jdbcType=VARCHAR},
      </if>
      <if test="updateAt != null">
        update_at = #{updateAt,jdbcType=TIMESTAMP},
      </if>
    </set>
    where user_id = #{userId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.springboot.oauth.server.domain.table.SysUser">
    update sys_user
    set user_code = #{userCode,jdbcType=VARCHAR},
      username = #{username,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      age = #{age,jdbcType=INTEGER},
      gender = #{gender,jdbcType=CHAR},
      nick_name = #{nickName,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      phone_no = #{phoneNo,jdbcType=VARCHAR},
      avatar = #{avatar,jdbcType=VARCHAR},
      status = #{status,jdbcType=INTEGER},
      token = #{token,jdbcType=VARCHAR},
      del_flag = #{delFlag,jdbcType=INTEGER},
      creator = #{creator,jdbcType=VARCHAR},
      create_at = #{createAt,jdbcType=TIMESTAMP},
      updater = #{updater,jdbcType=VARCHAR},
      update_at = #{updateAt,jdbcType=TIMESTAMP}
    where user_id = #{userId,jdbcType=BIGINT}
  </update>
</mapper>